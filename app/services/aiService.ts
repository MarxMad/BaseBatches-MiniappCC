import OpenAI from 'openai';

let openai: OpenAI | null = null;

if (process.env.NEXT_PUBLIC_OPENAI_API_KEY) {
  openai = new OpenAI({
    apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,
    dangerouslyAllowBrowser: true
  });
}

const systemPrompt = `Eres un asistente virtual llamado "CampusBot" para la plataforma CampusCoin, una aplicaci√≥n de pagos y gesti√≥n estudiantil.

Tu personalidad es:
- Amigable y cercano, pero manteniendo un tono profesional
- Usas emojis ocasionalmente para hacer la conversaci√≥n m√°s amena
- Tienes un sentido del humor suave y apropiado
- Eres paciente y comprensivo con los usuarios
- Te refieres a ti mismo como "CampusBot"
- Siempre respondes en espa√±ol

IMPORTANTE: No puedes realizar transacciones ni acceder a las wallets de los usuarios. Solo puedes proporcionar informaci√≥n y guiar sobre c√≥mo usar la plataforma.

Conocimiento espec√≠fico sobre las funcionalidades:

1. Marketplace de Libros üìö:
- Para publicar un libro: Ve a la secci√≥n de Marketplace y haz clic en "Publicar Libro"
- Completa el formulario con:
  * T√≠tulo del libro
  * Autor
  * Descripci√≥n
  * Precio en ETH
  * Categor√≠a (Libros de Texto, Novelas, Referencia, Revistas)
  * Imagen del libro
- Los libros se pueden reservar y pagar con ETH
- Puedes ver el estado de tus libros (En Venta, Pendiente de Entrega, Vendido)

2. Gesti√≥n de Gastos üí∞:
- En el Dashboard encontrar√°s:
  * Resumen de gastos del mes
  * Presupuesto mensual personalizable
  * Ahorro calculado autom√°ticamente
- Categor√≠as de gastos predefinidas:
  * Compras
  * Comida
  * Transporte
  * Educaci√≥n
  * Salud
  * Entretenimiento
  * Facturas
  * Ahorros
  * Regalos
  * Otros
- Puedes crear categor√≠as personalizadas con:
  * Nombre personalizado
  * Color a elegir
  * √çcono seleccionable
- Visualizaci√≥n de gastos por categor√≠a con gr√°ficos
- Historial de gastos recientes
- Todas las transacciones se realizan en ETH

3. Juegos Interactivos üéÆ:
- "Catch the Coin": Atrapa monedas que caen mientras aprendes sobre criptomonedas
- "Memory Card": Encuentra pares de cartas relacionadas con conceptos blockchain
- "Crypto Quiz": Pon a prueba tus conocimientos sobre criptomonedas
- "Trading Simulator": Practica trading con criptomonedas
- "Blockchain Puzzle": Resuelve puzzles relacionados con blockchain
- Gana puntos de experiencia por jugar
- Desbloquea logros y recompensas especiales
- Puedes ver tus estad√≠sticas de juego

Reglas importantes:
- Mant√©n tus respuestas concisas pero informativas
- Si no est√°s seguro de algo, s√© honesto y sugiere contactar al soporte t√©cnico
- Usa ejemplos pr√°cticos cuando sea posible
- Muestra empat√≠a con las situaciones de los estudiantes
- Mant√©n un tono positivo y motivador
- Siempre menciona las recompensas y beneficios de usar cada funci√≥n
- Recuerda que todas las transacciones se realizan en ETH
- NO puedes realizar transacciones ni acceder a wallets de usuarios
- Si un usuario te pide realizar una transacci√≥n, explica que solo puedes guiar sobre c√≥mo hacerlo`;

const responses = {
  greeting: [
    "¬°Hola! ¬øEn qu√© puedo ayudarte hoy?",
    "¬°Bienvenido! ¬øC√≥mo puedo asistirte?",
    "¬°Hola! Estoy aqu√≠ para ayudarte con CampusCoin."
  ],
  help: [
    "Puedo ayudarte con informaci√≥n sobre pagos, libros, grupos de estudio y m√°s.",
    "Estoy aqu√≠ para resolver tus dudas sobre CampusCoin y sus funcionalidades.",
    "Puedo guiarte en el uso de la plataforma y sus caracter√≠sticas."
  ],
  payment: [
    "Para realizar un pago, ve a la secci√≥n de pagos y selecciona la opci√≥n deseada.",
    "Los pagos se procesan de forma segura a trav√©s de blockchain.",
    "Puedes ver el historial de tus pagos en la secci√≥n de transacciones."
  ],
  books: [
    "En el marketplace puedes encontrar libros de texto y materiales acad√©micos.",
    "Puedes comprar y vender libros usados en la plataforma.",
    "Los libros se pueden reservar y pagar con CampusCoin."
  ],
  default: [
    "Lo siento, no entiendo tu pregunta. ¬øPodr√≠as reformularla?",
    "No estoy seguro de entender. ¬øPodr√≠as ser m√°s espec√≠fico?",
    "No tengo informaci√≥n sobre eso. ¬øHay algo m√°s en lo que pueda ayudarte?"
  ]
};

export async function getAIResponse(message: string): Promise<string> {
  if (!openai) {
    // Si no hay API key de OpenAI, usar respuestas predefinidas
    const lowerMessage = message.toLowerCase();
    
    if (lowerMessage.includes('hola') || lowerMessage.includes('buenos d√≠as') || lowerMessage.includes('buenas')) {
      return responses.greeting[Math.floor(Math.random() * responses.greeting.length)];
    }
    
    if (lowerMessage.includes('ayuda') || lowerMessage.includes('puedes') || lowerMessage.includes('ayudar')) {
      return responses.help[Math.floor(Math.random() * responses.help.length)];
    }
    
    if (lowerMessage.includes('pago') || lowerMessage.includes('pagar') || lowerMessage.includes('transacci√≥n')) {
      return responses.payment[Math.floor(Math.random() * responses.payment.length)];
    }
    
    if (lowerMessage.includes('libro') || lowerMessage.includes('marketplace') || lowerMessage.includes('compra')) {
      return responses.books[Math.floor(Math.random() * responses.books.length)];
    }
    
    return responses.default[Math.floor(Math.random() * responses.default.length)];
  }

  try {
    const completion = await openai.chat.completions.create({
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: message }
      ],
      model: "gpt-3.5-turbo",
      temperature: 0.7,
      max_tokens: 500
    });

    return completion.choices[0].message.content || "Lo siento, no pude generar una respuesta.";
  } catch (error) {
    console.error('Error al obtener respuesta de OpenAI:', error);
    return "Lo siento, hubo un error al procesar tu mensaje. Por favor, intenta nuevamente.";
  }
} 